# 8장. 복제

# 가용성

- 일정 기간 동안 서비스를 정상적으로 사용할 수 있는 시간의 비율

## 레디스의 고가용성

### 복제

- 마스터 노드의 데이터를 복제본 노드로 복사하는 기능
- 마스터 노드의 서버에 장애가 생겨 데이터가 유실되어도 복제본 노드에서 데이터 확인 가능

### 자동 페일오버

- 마스터 노드에서 발생한 장애를 감지해 레디스로 들어오는 클라이언트 연결을 자동으로 복제본 노드로 리디렉션
- 엔드포인트 수동 변경이 불필요해 빠른 장애 조치 가능

⇒ 두 가지 기능 중 어느 하나라도 정상적으로 동작하지 않으면 고가용성 확보 불가

# 레디스의 복제 구조

## 복제 구성 이유

- 서비스의 안정적인 운영을 위해 여분의 복제본 필요
- 대규모 서비스에서 트래픽 감소를 위해 사용 가능
- 운영중인 마스터 노드에서 데이터 백업을 받기 부담됨

## 멀티 마스터

- 모든 노드가 마스터이면서 동시에 복제본이 될 수 있는 기능
- 레디스는 멀티 마스터 구조 지원 X
- 복제본 노드는 기본적으로 읽기 커맨드만 수행 가능
- 모든 입력은 마스터에서 진행, 복제본은 마스터로부터 변경된 데이터 수신

## 복제 구조 구성

```jsx
REPLICAOF <master-ip> <master-port>
```

- 복제본이 될 노드에서 위 명령어 통하여 복제 연결 시작 가능
- 마스터가 예기치 못한 장애로 사용하지 못할 경우 애플리케이션의 연결 설정을 B로 변경
- 한 개의 복제 그룹에서는 항상 한 개의 마스터 노드만 존재

## 패스워드 설정

- 레디스 6.0 이상부터 기본적인 패스워드를 사용해 데이터를 복제하는 경우 `masterauth` 옵션 사용 필요
- `requirepass` 옵션 통하여 패스워드 설정이 가능하며, 복제본 노드는 `masterpass` 옵션에 마스터의 `requirepass` 정보를 입력해야 함
- 하나의 복제 그룹에 속한 마스터와 복제본 노드는 같은 패스워드로 설정하는 것이 일반적
- 복제본 인스턴스의 설정 파일 수정 후 인스턴스 재시작 또는 `CONFIG REWRITE` 통하여 설정 파일 재작성 가능

# 복제 메커니즘

## 버전 7 이전

- `repl-diskless-sync` 옵션의 기본 값 : `no`
- 동작 방식
    1. `REPLICAOF` 커맨드로 복제 연결 시도
    2. 마스터 노드에서 `fork` 로 자식 프로세스 생성한 뒤 RDB 스냅샷 생성
    3. (2) 수행 중에 마스터 노드에서 수행된 모든 데이터셋의 변경 작업은 RESP 형태로 마스터의 복제 버퍼에 저장
    4. RDB 파일 생성 완료 시 파일은 **복제본 노드로 복사**됨
    5. 복제본에 저장됐던 모든 내용을 삭제한 뒤 RDB 파일을 이용해 데이터 로딩
    6. 복제 과정 중 버퍼링됐던 복제 버퍼의 데이터를 복제본으로 전달하여 수행
- RDB 파일 생성 도중 다른 노드에서 복제 연결 요청 시 큐에 저장되어 파일 저장 이후 여러 복제본이 한 번에 복제 연결 시작 가능

## 버전 7 이후

- `repl-diskless-sync` 옵션의 기본 값 : `yes`
- 동작 방식
    1. `REPLICAOF` 커맨드로 복제 연결 시도
    2. 마스터 노드는 **소켓 통신**을 이용해 복제본 노드에 바로 연결, 파일은 생성함과 동시에 점진적으로 복제본의 소켓에 전송
    3. (2) 수행 중 마스터 노드에서 수행된 모든 데이터셋 변경 작업은 RESP 형태로 마스터의 복제 버퍼에 저장
    4. 소켓에서 읽어온 RDB 파일을 복제본의 디스크에 저장
    5. 복제본에 저장된 모든 데이터를 모두 삭제한 뒤 RDB 파일 내용을 메모리에 로딩
    6. 복제 버퍼의 데이터를 복제본으로 전달해 수행
- 복제본의 `repl-diskless-load` 옵션은 기본으로 `disabled`, 따라서 소켓에서 읽어온 RDB 스냅샷을 메모리에 바로 로드하지 않고 노드의 디스크에 저장하는 과정을 거침
    - 복제본은 데이터 전체 삭제 후 파일을 로드하는데 파일의 정합성을 알 수 없어 위와 같은 과정을 통해 안정성 확보 가능
- 복제 과정 종료 전 다른 복제본과의 연결 수행 불가하므로 `repl-diskless-sync-delay` 옵션을 통해 기간 내 다른 복제본 연결 요청에 대해 마스터가 여러 복제본으로 소켓 통신 연결을 하도록 함

⇒ 디스크의 I/O가 느리고 네트워크가 빠른 경우 디스크를 사용하지 않는 복제 방식이 유리

## 비동기 방식의 복제 연결

- 마스터에서 복제본으로의 데이터 전달은 비동기로 진행
- 마스터 노드 비정상 종료 시 데이터 유실 가능성이 존재하지만 이 과정은 매우 빠르게 진행되어 유실이 빈번하게 발생되지 않음

## 복제 ID

- 모든 레디스 인스턴스는 복제 ID를 가지며, `INFO REPLICATION` 커맨드 통해 복제 연결 상태 확인 가능
    
    ```jsx
    # Replication
    role:master
    connected_slaves:0
    master_failover_state:no-failover
    master_replid:aafe8e358ce0dd93f54fb1c6c8a425206c48d5c6 // 중요
    master_replid2:0000000000000000000000000000000000000000
    master_repl_offset:0
    second_repl_offset:-1
    repl_backlog_active:0
    repl_backlog_size:1048576
    repl_backlog_first_byte_offset:0
    repl_backlog_histlen:0
    ```
    
- 복제 ID는 오프셋과 쌍으로 존재하며, 데이터가 수정되는 모든 커맨드 수행 시 오프셋 증가
- 복제 연결 후 복제본은 마스터와 동일한 복제 ID와 복제본에서 마지막으로 수행된 마스터의 오프셋을 보유하게 됨
- ⭐ **복제 ID와 오프셋이 같을 때 두 노드는 정확히 일치한 상태로 판별**

## 부분 재동기화

- 복제 연결이 끊길 때마다 마스터에서 RDB 파일을 복제본에 전달하지 않기 위한 방안으로 부분 재동기화 사용
- 마스터는 커넥션 유실 대비 **백로그 버퍼**에 복제본에 전달한 커맨드 데이터를 저장
    - `repl-backlog-size` : 복제 백로그 크기 설정 옵션
    - `repl-backlog-ttl` : 해당 시간만큼 경과 시 메모리에서 백로그 공간 삭제
- 복제 연결이 끊긴 뒤 재연결 시 복제본은 `PSYNC` 커맨드를 통해 자신의 복제 ID와 오프셋을 마스터에 전달
- 마스터의 백로그 버퍼에 원하는 데이터가 없거나 복제본의 복제 ID가 마스터와 일치하지 않다면 전체 재동기화 수행
- ⭐ **복제본은 언제든지 마스터로 승격 가능하므로 백로그 버퍼를 해제하지 않음**

## Secondary 복제 ID

- 마스터 노드 장애 시 복제본이 새로운 마스터로 승격됨과 동시에 신규 복제 ID 획득
이때 기존 복제 ID는 `master_replid2`에 저장
- 신규 마스터와 다른 복제본의 복제 연결 시 두 노드의 `master_replid2`가 같으므로 신규 마스터에 부분 재동기화 시도
- 신규 마스터의 백로그가 재동기화를 하기 위한 데이터 보유 시 부분 재동기만으로도 연결 가능, 불필요한 전체 재동기화 방지
- ⭐ **레디스가 2개의 복제 ID를 갖는 이유는 마스터로 승격되는 복제본 때문**

## 읽기 전용 모드로 동작하는 복제본 노드

- `replica-read-only` 옵션 : 복제본의 쓰기 커맨드 허용 여부 제어, 기본 값 `yes`
- ⭐ 복제본에 데이터 쓰기가 가능하더라도 로컬에서만 존재하며, 해당 노드에 연결된 다른 복제본에 전파되지 않음

## 유효하지 않은 복제본 데이터

- 복제본의 데이터와 마스터의 데이터가 정확하게 일치하지 않는 경우 데이터가 유효하지 않는 것으로 판별
- `replica-serve-stale-data` : 복제본의 유효하지 않은 데이터 조회 가능 여부, 기본 값 `yes`
    - `no` 설정 시 일부 기본 커맨드 제외 모든 커맨드에 대해 아래 오류 반환
        
        ```jsx
        SYNC with master in progress
        ```
        

## 백업을 사용하지 않는 경우에서의 데이터 복제

- 레디스에서 복제 사용 시 마스터와 복제본 모두 백업 기능 사용 권장
- 백업 미사용 시 마스터 인스턴스에 대하여 자동 재시작 활성화를 사용하지 않도록 설정 필요

### 장애 상황

1. 백업 기능을 사용하지 않는 마스터와 복제본 노드 존재
2. 마스터 노드가 장애로 인해 종료됨, 레디스 프로세스를 자동 재시작하는 시스템에 의해 노드가 재부팅되며 메모리 초기화
3. 복제본 노드에 데이터가 존재하지만 마스터 노드로의 복제 연결 시도
4. 마스터에서 복제본으로 빈 데이터셋 전달
